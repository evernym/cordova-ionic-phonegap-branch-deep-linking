{"version":3,"sources":["lib/xmlHelper.js"],"names":[],"mappings":";;AAAA;;;AAGA,CAAC,YAAW;;AAEV,MAAI,KAAK,QAAQ,IAAR,CAAT;AAAA,MACE,SAAS,QAAQ,QAAR,CADX;;AAGA,SAAO,OAAP,GAAiB;AACf,mBAAe,aADA;AAEf,oBAAgB;AAFD,GAAjB;;AAKA;;;;;;AAMA,WAAS,aAAT,CAAuB,QAAvB,EAAiC;AAC/B,QAAI,OAAJ,EACE,SADF,EAEE,UAFF;;AAIA,QAAI;AACF,gBAAU,GAAG,YAAH,CAAgB,QAAhB,CAAV;AACA,kBAAY,IAAI,OAAO,MAAX,EAAZ;AACA,gBAAU,WAAV,CAAsB,OAAtB,EAA+B,UAAS,GAAT,EAAc,IAAd,EAAoB;AACjD,YAAI,IAAJ,EAAU;AACR,uBAAa,IAAb;AACD;AACF,OAJD;AAKD,KARD,CAQE,OAAO,GAAP,EAAY,CAAE;;AAEhB,WAAO,UAAP;AACD;;AAED;;;;;;;AAOA,WAAS,cAAT,CAAwB,MAAxB,EAAgC,QAAhC,EAA0C,OAA1C,EAAmD;AACjD,QAAI,aAAa,IAAI,OAAO,OAAX,CAAmB,OAAnB,CAAjB;AAAA,QACE,iBAAiB,WAAW,WAAX,CAAuB,MAAvB,CADnB;AAAA,QAEE,UAAU,IAFZ;;AAIA,QAAI;AACF,SAAG,aAAH,CAAiB,QAAjB,EAA2B,cAA3B;AACD,KAFD,CAEE,OAAO,GAAP,EAAY;AACZ,cAAQ,GAAR,CAAY,GAAZ;AACA,gBAAU,KAAV;AACD;;AAED,WAAO,OAAP;AACD;AAEF,CAxDD","file":"lib/xmlHelper.js","sourcesContent":["/*\nSmall helper class to read/write from/to xml file.\n*/\n(function() {\n\n  var fs = require('fs'),\n    xml2js = require('xml2js');\n\n  module.exports = {\n    readXmlAsJson: readXmlAsJson,\n    writeJsonAsXml: writeJsonAsXml\n  };\n\n  /**\n   * Read data from the xml file as JSON object.\n   *\n   * @param {String} filePath - absolute path to xml file\n   * @return {Object} JSON object with the contents of the xml file\n   */\n  function readXmlAsJson(filePath) {\n    var xmlData,\n      xmlParser,\n      parsedData;\n\n    try {\n      xmlData = fs.readFileSync(filePath);\n      xmlParser = new xml2js.Parser();\n      xmlParser.parseString(xmlData, function(err, data) {\n        if (data) {\n          parsedData = data;\n        }\n      });\n    } catch (err) {}\n\n    return parsedData;\n  }\n\n  /**\n   * Write JSON object as xml into the specified file.\n   *\n   * @param {Object} jsData - JSON object to write\n   * @param {String} filePath - path to the xml file where data should be saved\n   * @return {boolean} true - if data saved to file; false - otherwise\n   */\n  function writeJsonAsXml(jsData, filePath, options) {\n    var xmlBuilder = new xml2js.Builder(options),\n      changedXmlData = xmlBuilder.buildObject(jsData),\n      isSaved = true;\n\n    try {\n      fs.writeFileSync(filePath, changedXmlData);\n    } catch (err) {\n      console.log(err);\n      isSaved = false;\n    }\n\n    return isSaved;\n  }\n\n})();\n"],"sourceRoot":"/source/"}